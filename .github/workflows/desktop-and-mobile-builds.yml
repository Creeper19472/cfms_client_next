name: Desktop and Mobile Builds (Windows and APK)

on:
  # Runs on push to any of the below branches
  push:
    # branches:
    #   - master
    #   - dev
    tags:
      - "v*.*.*"

  # # Runs on pull request events that target one of the below branches
  # pull_request:
  #   branches:
  #     - master
  #     - dev

  # Allows you to run this workflow manually from the Actions tab of the repository
  workflow_dispatch:

env:
  # https://flet.dev/docs/publish#versioning
  # BUILD_NUMBER: 1
  # BUILD_VERSION: 1.0.0

  # Python version to use
  PYTHON_VERSION: 3.13.7
  
  # flet-cli version to install for `flet build`
  FLET_CLI_VERSION: 0.70.0
  
  # Ensures Python uses UTF-8 encoding by default
  PYTHONUTF8: 1
  
  # Disables rich text formatting in Flet CLI output
  FLET_CLI_NO_RICH_OUTPUT: 1
  
  # Disables progress bars when using UV
  UV_NO_PROGRESS: 1

jobs:
  # build-linux:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4

  #   - name: Setup Python ${{ env.PYTHON_VERSION }}
  #     uses: actions/setup-python@v5
  #     with:
  #       python-version: ${{ env.PYTHON_VERSION }}

  #   - name: Install flet-cli ${{ env.FLET_CLI_VERSION }}
  #     run: |
  #       python -m pip install --upgrade pip
  #       pip install flet-cli==$FLET_CLI_VERSION

  #   - name: Patch for linux build
  #     run: |
  #       sudo apt-get update -y
  #       sudo apt-get install -y ninja-build libgtk-3-dev

  #   - name: Flet Build Linux
  #     run: |
  #       flet build linux --verbose

  #   - name: Upload Linux Artifact
  #     uses: actions/upload-artifact@v4.3.4
  #     with:
  #       name: linux-build-artifact
  #       path: build/linux
  #       if-no-files-found: warn
  #       overwrite: false

  build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install flet-cli ${{ env.FLET_CLI_VERSION }}
      run: |
        python -m pip install --upgrade pip
        pip install flet-cli==$env:FLET_CLI_VERSION

    - name: Flet Build Windows
      run: |
        flet build windows --verbose --no-rich-output

    # - name: Upload Windows Artifact
    #   uses: actions/upload-artifact@v4.3.4
    #   with:
    #     name: windows-build-artifact
    #     path: build/windows
    #     if-no-files-found: warn
    #     overwrite: false

    - name: Archive Release
      uses: thedoctor0/zip-release@0.7.6
      with:
        type: 'zip'
        filename: 'cfms-cli-${{ github.ref }}-windows.zip'
        path: 'build/windows'
        exclusions: '*.git* /*node_modules/* .editorconfig'

    - name: Release
      uses: softprops/action-gh-release@v2
      if: github.ref_type == 'tag'
      with:
        files: |
          cfms-cli-${{ github.ref }}-windows.zip
        # overwrite_files: true
        generate_release_notes: true

  # build-aab:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4

  #   - name: Setup Python ${{ env.PYTHON_VERSION }}
  #     uses: actions/setup-python@v5
  #     with:
  #       python-version: ${{ env.PYTHON_VERSION }}

  #   - name: Install flet-cli ${{ env.FLET_CLI_VERSION }}
  #     run: |
  #       python -m pip install --upgrade pip
  #       pip install flet-cli>=$FLET_CLI_VERSION

  #   - name: Extract keystore
  #     run: |
  #       echo ${{ secrets.ENCODED_KEYSTORE }} | base64 -di > keystore.jks

  #   - name: Flet Build AAB
  #     run: |
  #       flet build aab --verbose --android-signing-key-store-password ${{ secrets.FLET_ANDROID_SIGNING_KEY_STORE_PASSWORD }} --android-signing-key-password ${{ secrets.FLET_ANDROID_SIGNING_KEY_PASSWORD }}

  #   - name: Upload AAB Artifact
  #     uses: actions/upload-artifact@v4.3.4
  #     with:
  #       name: aab-build-artifact
  #       path: build/aab
  #       if-no-files-found: warn
  #       overwrite: false

  build-apk:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install flet-cli ${{ env.FLET_CLI_VERSION }}
      run: |
        python -m pip install --upgrade pip
        pip install flet-cli==$FLET_CLI_VERSION

    - name: Extract keystore
      run: |
        mkdir -p ./build/flutter/android/app
        echo ${{ secrets.ENCODED_KEYSTORE }} | base64 -di > ./build/flutter/android/app/keystore.jks

    - name: Flet Build APK
      run: |
        flet build apk --verbose --android-signing-key-store keystore.jks --android-signing-key-alias key0 --android-signing-key-store-password ${{ secrets.FLET_ANDROID_SIGNING_KEY_STORE_PASSWORD }} --android-signing-key-password ${{ secrets.FLET_ANDROID_SIGNING_KEY_PASSWORD }}

    - name: Upload APK Artifact
      uses: actions/upload-artifact@v4.3.4
      with:
        name: apk-build-artifact
        path: build/apk
        if-no-files-found: warn
        overwrite: false

    - name: Release
      uses: softprops/action-gh-release@v2
      if: github.ref_type == 'tag'
      with:
        files: |
          build/apk/app-release.apk
          build/apk/app-release.apk.sha1
        # overwrite_files: true
        generate_release_notes: true